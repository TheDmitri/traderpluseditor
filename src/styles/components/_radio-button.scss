/**
 * Radio Button Component Styling
 * ========================================================================== 
 * This file contains styling for Angular Material radio button components.
 * Following the 60-30-10 ratio principle:
 * - 60%: Radio backgrounds, containers, disabled states (neutral colors)
 * - 30%: Labels, supporting elements, hover states (secondary colors)
 * - 10%: Selected states, focus indicators (primary/accent colors)
 */

/* Base Radio Button Styling
 * ========================================================================== 
 * Core styling for the radio button component
 */
.mat-mdc-radio-button {
  // Radio button outer circle
  .mdc-radio {
    .mdc-radio__background {
      .mdc-radio__outer-circle {
        border-color: var(--brush-radio-background) !important; // 60% - container border
      }
      
      // Inner circle (selected state indicator)
      .mdc-radio__inner-circle {
        background-color: var(--brush-radio-selected) !important; // 10% - primary accent color
      }
    }
    
    // Hover state - more visible border
    &:hover:not(.mdc-radio--disabled) {
      .mdc-radio__background .mdc-radio__outer-circle {
        border-color: var(--brush-input-border-hover) !important; // 30% - supporting highlight
      }
    }
    
    // Disabled state - reduced visibility
    &.mdc-radio--disabled {
      .mdc-radio__background {
        .mdc-radio__outer-circle {
          border-color: var(--brush-input-text-disabled) !important; // 60% - muted border
        }
        
        .mdc-radio__inner-circle {
          background-color: var(--brush-input-text-disabled) !important; // 60% - muted indicator
        }
      }
    }
  }
  
  // Radio button label styling
  .mdc-form-field {
    label {
      color: var(--brush-label-text) !important; // 30% - supporting text
      font-size: var(--font-size-base);
      
      // Disabled label state
      &.mat-mdc-radio-disabled {
        color: var(--brush-input-text-disabled) !important; // 60% - muted text
      }
    }
  }
  
  // Focus state indicator for accessibility
  &.cdk-focused .mdc-radio .mdc-radio__native-control:focus:focus-visible ~ .mdc-radio__background::before {
    opacity: 0.12;
    transform: scale(1);
    background-color: var(--brush-focus-outline) !important; // 10% - focus indicator
  }
}

/* Radio Group Layout
 * ========================================================================== 
 * Controls the arrangement of radio buttons within a group
 */
.mat-mdc-radio-group {
  display: flex;
  flex-direction: column;
  gap: 8px;
  
  // Horizontal layout option
  &.radio-group-horizontal {
    flex-direction: row;
    flex-wrap: wrap;
    
    .mat-mdc-radio-button {
      margin-right: 16px;
      margin-bottom: 8px;
    }
  }
  
  // Radio group within form field
  &.in-form-field {
    margin-top: 8px;
    margin-bottom: 16px;
  }
}

/* Custom Radio Button Variants
 * ========================================================================== 
 * Additional styling for specialized radio button layouts
 */
.custom-radio-tiles {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  
  // Individual tile option
  .radio-tile {
    position: relative;
    
    // Hidden native radio input
    input[type="radio"] {
      position: absolute;
      opacity: 0;
      width: 0;
      height: 0;
    }
    
    // Tile label styling
    .tile-label {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      width: 120px;
      height: 90px;
      border: 1px solid var(--brush-radio-background); // 60% - container border
      border-radius: 8px;
      padding: 12px;
      cursor: pointer;
      transition: all var(--transition-normal) var(--transition-timing);
      background-color: var(--brush-background-elevated); // 60% - container background
      
      // Icon in tile
      .tile-icon {
        font-size: 24px;
        margin-bottom: 8px;
        color: var(--brush-text-secondary); // 30% - supporting element
      }
      
      // Text in tile
      .tile-text {
        font-size: var(--font-size-sm);
        text-align: center;
        color: var(--brush-text-primary); // 60% - primary text
      }
    }
    
    // Selected state styling
    input[type="radio"]:checked + .tile-label {
      border-color: var(--brush-radio-selected); // 10% - primary accent
      background-color: var(--color-primary-transparent-10); // 10% - subtle background
      
      .tile-icon {
        color: var(--brush-radio-selected); // 10% - primary accent
      }
      
      .tile-text {
        color: var(--brush-text-accent); // 10% - accent text
      }
    }
    
    // Hover state
    &:hover .tile-label:not(.disabled) {
      border-color: var(--brush-input-border-hover); // 30% - supporting highlight
    }
    
    // Focus state
    input[type="radio"]:focus-visible + .tile-label {
      outline: 2px solid var(--brush-focus-outline); // 10% - focus indicator
      outline-offset: 2px;
    }
    
    // Disabled state
    &.disabled {
      .tile-label {
        opacity: 0.5;
        cursor: not-allowed;
        border-color: var(--brush-input-text-disabled); // 60% - muted border
        
        .tile-icon, .tile-text {
          color: var(--brush-input-text-disabled); // 60% - muted text
        }
      }
    }
  }
}
