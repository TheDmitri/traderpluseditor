/**
 * Button Component Styling
 * ========================================================================== 
 * This file contains styling for Angular Material buttons and custom icon buttons,
 * following the 60-30-10 ratio principle:
 * - Primary buttons use primary colors (10% - visual emphasis)
 * - Secondary buttons use secondary colors (30% - supporting actions)
 * - Background, borders, disabled states use neutral colors (60% - structural)
 */

/* Material Button Customization
 * Overrides default Material button styling to match application design system
 * Includes primary, secondary, warning, and light variants with consistent interaction states
 */
.mat-mdc-raised-button,
.mat-mdc-button {
  // Primary action button - main call to action (10% of UI)
  &.mat-primary {
    background-color: var(--brush-button-primary-background) !important;
    color: var(--brush-button-primary-text) !important;

    // Interactive states
    &:hover {
      background-color: var(--brush-button-primary-hover) !important;
    }

    &:active {
      background-color: var(--brush-button-primary-active) !important;
    }

    // Accessibility focus indicator
    &:focus:not(:active) {
      outline: 2px solid var(--brush-button-focus-ring) !important;
      outline-offset: 2px;
    }

    // Disabled state (60% - structural)
    &:disabled {
      background-color: var(--brush-button-disabled-background) !important;
      color: var(--brush-button-disabled-text) !important;
    }
  }

  // Secondary buttons - supporting actions (30% of UI)
  &.mat-accent {
    background-color: var(--brush-button-secondary-background) !important;
    color: var(--brush-button-secondary-text) !important;

    // Interactive states
    &:hover {
      background-color: var(--brush-button-secondary-hover) !important;
    }

    &:active {
      background-color: var(--brush-button-secondary-active) !important;
    }

    // Accessibility focus indicator
    &:focus:not(:active) {
      outline: 2px solid var(--brush-button-focus-ring) !important;
      outline-offset: 2px;
    }

    // Disabled state
    &:disabled {
      background-color: var(--brush-button-disabled-background) !important;
      color: var(--brush-button-disabled-text) !important;
    }
  }

  // Warning/destructive buttons (special emphasis - part of 10%)
  &.mat-warn {
    background-color: var(--brush-button-destructive-background) !important;
    color: white !important;

    // Interactive states
    &:hover {
      background-color: var(--brush-button-destructive-hover) !important;
    }

    &:active {
      background-color: var(--brush-button-destructive-active) !important;
    }

    // Accessibility focus indicator
    &:focus:not(:active) {
      outline: 2px solid var(--color-error-light) !important;
      outline-offset: 2px;
    }

    // Disabled state
    &:disabled {
      background-color: var(--brush-button-disabled-background) !important;
      color: var(--brush-button-disabled-text) !important;
    }
  }

  // Light variant for use on dark backgrounds (part of 60% structural)
  &.light-button {
    background-color: var(--color-neutral-lightest) !important;
    color: var(--brush-text-primary-on-light) !important;

    // Interactive states
    &:hover {
      background-color: var(--color-neutral-light) !important;
    }

    &:active {
      background-color: var(--color-neutral-medium) !important;
    }

    // Accessibility focus indicator
    &:focus:not(:active) {
      outline: 2px solid var(--brush-focus-outline-light) !important;
      outline-offset: 2px;
    }

    // Disabled state
    &:disabled {
      background-color: var(--brush-button-disabled-background-light) !important;
      color: var(--brush-button-disabled-text) !important;
    }
  }
}

/* Custom Icon Button System
 * ========================================================================== 
 * Provides a flexible icon button system with consistent styling, sizes,
 * and variants that match the application's design language.
 */
.custom-icon-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 4px;
  border: none;
  background-color: transparent;
  position: relative;
  cursor: pointer;
  transition: all var(--transition-normal) var(--transition-timing);
  padding: 0;
  
  // Accessibility focus handling
  &:focus {
    outline: none;
  }
  
  &:focus-visible {
    box-shadow: 0 0 0 2px var(--brush-focus-outline); // Keyboard focus indicator
  }
  
  // Icon styling and animation
  .mat-icon {
    color: inherit;
    font-size: 24px;
    width: 24px;
    height: 24px;
    transition: transform var(--transition-normal) var(--transition-timing);
  }
  
  /* Button Color Variants */
  
  // Primary action icon buttons (10% emphasis)
  &.icon-btn-primary {
    color: var(--color-primary-medium);
    
    // Interactive states
    &:hover {
      background-color: var(--color-primary-transparent-10);
      color: var(--color-primary-light);
    }
    
    &:active {
      background-color: var(--color-primary-transparent-20);
      transform: scale(0.95); // Subtle pressed effect
      
      .mat-icon {
        transform: scale(0.95); // Coordinated icon animation
      }
    }
    
    &:disabled {
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
      background-color: transparent;
    }
  }
  
  // Secondary icon buttons (30% supporting)
  &.icon-btn-secondary {
    color: var(--color-secondary-medium);
    
    // Interactive states
    &:hover {
      background-color: var(--color-secondary-transparent-10);
      color: var(--color-secondary-light);
    }
    
    &:active {
      background-color: var(--color-secondary-transparent-20);
      transform: scale(0.95);
      
      .mat-icon {
        transform: scale(0.95);
      }
    }
    
    &:disabled {
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
      background-color: transparent;
    }
  }
  
  // Destructive/warning icon buttons (special emphasis - part of 10%)
  &.icon-btn-warn {
    color: var(--color-error-medium);
    
    // Interactive states
    &:hover {
      background-color: var(--color-error-transparent-50);
      color: var(--color-error-light);
    }
    
    &:active {
      background-color: var(--color-error-transparent-50);
      transform: scale(0.95);
      
      .mat-icon {
        transform: scale(0.95);
      }
    }
    
    &:disabled {
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
      background-color: transparent;
    }
  }
  
  // Light variant for dark backgrounds (part of 60% structural)
  &.icon-btn-light {
    color: var(--color-neutral-lightest);
    
    // Interactive states
    &:hover {
      background-color: var(--brush-hover-overlay);
      color: white;
    }
    
    &:active {
      background-color: var(--brush-active-overlay);
      transform: scale(0.95);
      
      .mat-icon {
        transform: scale(0.95);
      }
    }
    
    &:disabled {
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
      background-color: transparent;
    }
  }
  
  /* Size Variants */
  
  // Small icon button
  &.icon-btn-sm {
    width: 32px;
    height: 32px;
    
    .mat-icon {
      font-size: 20px;
      width: 20px;
      height: 20px;
    }
  }
  
  // Large icon button
  &.icon-btn-lg {
    width: 48px;
    height: 48px;
    
    .mat-icon {
      font-size: 28px;
      width: 28px;
      height: 28px;
    }
  }
  
  /* Button with Text Label */
  &.icon-btn-with-text {
    width: auto;
    padding: 0 16px;
    gap: 8px;
    
    .btn-label {
      font-size: var(--font-size-sm);
      font-weight: 500;
      letter-spacing: 0.02em;
      white-space: nowrap;
    }
  }
  
  // Container for ripple effect
  .icon-btn-ripple {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    pointer-events: none;
    overflow: hidden;
  }
}

/* Custom Stroked Button System
 * ========================================================================== 
 * Provides outlined buttons with consistent styling using the application's 
 * color system. These mimic mat-stroked-button but use our custom color palette.
 */
.custom-stroked-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
  padding: 0 16px;
  min-width: 64px;
  height: 36px;
  border-radius: 4px;
  font-size: 16px;
  font-weight: 500;
  line-height: 36px;
  text-decoration: none;
  text-align: center;
  vertical-align: baseline;
  cursor: pointer;
  background-color: transparent;
  transition: all 0.2s ease;
  border-width: 0.5px;
  border-style: solid;
  user-select: none;
  
  // Primary variant (10% emphasis)
  &.color-primary {
    border-color: var(--color-primary-dark);
    color: var(--color-primary-medium);

    &:hover {
      background-color: var(--color-primary-transparent-10);
      border-color: var(--color-primary-medium);
      color: var(--color-primary-light);
    }

    &:active {
      background-color: var(--color-primary-transparent-20);
      border-color: var(--color-primary-darkest);
      color: var(--color-primary-darkest);
    }

    &:focus:not(:active) {
      outline: 2px solid var(--brush-button-focus-ring);
      outline-offset: 1px;
    }

    &:disabled {
      border-color: var(--brush-button-disabled-text);
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
    }
  }

  // Secondary variant (30% supporting)
  &.color-secondary {
    border-color: var(--color-secondary-dark);
    color: var(--color-secondary-medium);

    &:hover {
      background-color: var(--color-secondary-transparent-10);
      border-color: var(--color-secondary-medium);
      color: var(--color-secondary-light);
    }

    &:active {
      background-color: var(--color-secondary-transparent-20);
      border-color: var(--color-secondary-darkest);
      color: var(--color-secondary-darkest);
    }

    &:focus:not(:active) {
      outline: 2px solid var(--color-secondary-light);
      outline-offset: 1px;
    }

    &:disabled {
      border-color: var(--brush-button-disabled-text);
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
    }
  }

  // Accent variant (part of 10% emphasis)
  &.color-accent {
    border-color: var(--color-accent-dark);
    color: var(--color-accent-medium);

    &:hover {
      background-color: var(--color-accent-transparent-10);
      border-color: var(--color-accent-medium);
      color: var(--color-accent-light);
    }

    &:active {
      background-color: var(--color-accent-transparent-20);
      border-color: var(--color-accent-darkest);
      color: var(--color-accent-darkest);
    }

    &:focus:not(:active) {
      outline: 2px solid var(--color-accent-light);
      outline-offset: 1px;
    }

    &:disabled {
      border-color: var(--brush-button-disabled-text);
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
    }
  }

  // Warning/destructive variant (special emphasis - part of 10%)
  &.color-warn {
    border-color: var(--color-error-dark);
    color: var(--color-error-medium);

    &:hover {
      background-color: var(--color-error-transparent-50);
      border-color: var(--color-error-medium);
      color: var(--color-error-light);
    }

    &:active {
      background-color: var(--color-error-transparent-50);
      border-color: var(--color-error-darkest);
      color: var(--color-error-darkest);
    }

    &:focus:not(:active) {
      outline: 2px solid var(--color-error-light);
      outline-offset: 1px;
    }

    &:disabled {
      border-color: var(--brush-button-disabled-text);
      color: var(--brush-button-disabled-text);
      cursor: not-allowed;
    }
  }

  // Size variants
  &.button-sm {
    height: 32px;
    line-height: 32px;
    padding: 0 12px;
    font-size: 13px;
  }

  &.button-lg {
    height: 44px;
    line-height: 44px;
    padding: 0 24px;
    font-size: 15px;
  }

  // With icon
  &.with-icon {
    gap: 8px;
    
    .mat-icon {
      font-size: 18px;
      width: 18px;
      height: 18px;
    }
  }

  // Light variant for dark backgrounds (part of 60% structural)
  &.light-stroked-button {
    border-color: var(--color-neutral-lightest);
    color: var(--color-neutral-lightest);

    &:hover {
      background-color: var(--brush-hover-overlay);
      border-color: white;
      color: white;
    }

    &:active {
      background-color: var(--brush-active-overlay);
    }
    
    &:disabled {
      border-color: var(--brush-button-disabled-text);
      color: var(--brush-button-disabled-text);
    }
  }
}
